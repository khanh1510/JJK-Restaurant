void UNLIMITED_VOID() {
    cout << "unlimited void" << endl;
    if (head == nullptr || size < 4) {
        return;
    }
    
    customer* temp = head;
    int sumMin = 2^7 - 1;
    customer* minHead = nullptr;
    
    do {
        customer* tmp = temp;
        int demm = 0;
        int min = 0;
        customer* Min = nullptr;
        customer* Minn = nullptr;

        do {
            min += tmp->energy;
            customer* moi = new customer(tmp->name, tmp->energy, nullptr, nullptr);
            demm++;
            
            if (demm >= 4 && min < sumMin) {
                sumMin = min;
                minHead = Min;
            }
            else if (demm >= 4 && min > sumMin) {
                break;
            }

            if (Min == nullptr) {
                Min = moi;
                Min->next = Min;
                Min->prev = Min;
                Minn = Min;
            }
            else {
                if (Min->energy > tmp->energy) {
                    Min = insertBefore(Min, moi);
                    Minn = Min;
                }
                else {
                    Min = insertAfter(Min, moi);
                }
            }
            
            tmp = tmp->prev;
        } while (tmp != temp);
        
        temp = temp->next; // Move to the next customer in the circular list
    } while (temp != head);

    if (minHead == nullptr) {
        return;
    }

    customer* tmpp = minHead;
    do {
        tmpp->print();
        tmpp = tmpp->next;
    } while (tmpp != minHead && tmpp != nullptr);
}
