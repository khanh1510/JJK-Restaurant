void UNLIMITED_VOID() {
    cout << "unlimited void" << endl;
    if (head == nullptr || size < 4) {
        return;
    }
    customer* temp = head;
    int sum = 0;
    long sumMin = 2^7-1;
    customer* minHead = NULL;
    do {
        customer* tmp = temp;
        int demm = 0;
        int min = 0;
        customer* Min = NULL;
        customer* Minn = NULL;
            do {
                min += tmp->energy;
                customer* moi = new customer(tmp->name, tmp->energy, NULL, NULL);
                demm++;
                if (demm >= 4 && min < sumMin) {
                    sumMin = min;
                    minHead = Minn;
                }
                else if (demm >= 4 && min > sumMin) break;
                if (Min == nullptr) {
                    Min = moi;
                    Min->next = Min;
                    Min->prev = Min;
                    Minn = Min;
                }
                else {
                    if (Min->energy > tmp->energy) {
                        Min = insertBefore(Min, moi);
                        Minn = Min;
                    }
                    else {
                        Min = insertAfter(Min, moi);
                    }
                }
                tmp = tmp->prev;
            }
            while (tmp != temp);
            temp = temp->prev;
    }while (temp != head);
    if (minHead == NULL) return;
    customer* tmpp = minHead;
    do {
        tmpp->print();
        tmpp = tmpp->prev;
    } while (tmpp != minHead && tmpp != nullptr);
}
